// Script simple pour tester la logique des nouvelles dates de d√©mo
console.log('üß™ Test de la logique des nouvelles dates de d√©mo...');

// Simuler la logique de setupDynamicDemoData
const now = new Date();
console.log(`\nüïê Heure actuelle: ${now.toLocaleString('fr-FR')}`);

// Voyage Pass√© (il y a 3 semaines)
const pastStartDate = new Date(now.getTime() - 21 * 24 * 3600 * 1000);
const pastEndDate = new Date(now.getTime() - 14 * 24 * 3600 * 1000);
console.log(`\nüèñÔ∏è Voyage Pass√©:`);
console.log(`   ${pastStartDate.toLocaleString('fr-FR')} ‚Üí ${pastEndDate.toLocaleString('fr-FR')}`);
console.log(`   Dur√©e: ${Math.round((pastEndDate - pastStartDate) / (24 * 3600 * 1000))} jours`);

// Voyage En Cours (vol de 3h, positionn√© √† 1/3)
const totalDurationMs = 3 * 60 * 60 * 1000; // 3 heures
const ongoingStartDate = new Date(now.getTime() - (totalDurationMs / 3));
const ongoingEndDate = new Date(now.getTime() + (totalDurationMs * 2 / 3));
console.log(`\n‚úàÔ∏è Voyage En Cours:`);
console.log(`   ${ongoingStartDate.toLocaleString('fr-FR')} ‚Üí ${ongoingEndDate.toLocaleString('fr-FR')}`);
console.log(`   Dur√©e: ${Math.round(totalDurationMs / (60 * 1000))} minutes`);
console.log(`   Position: 1/3 termin√©, 2/3 restant`);

// Voyage Futur (dans 3 semaines)
const futureStartDate = new Date(now.getTime() + 21 * 24 * 3600 * 1000);
const futureEndDate = new Date(now.getTime() + 28 * 24 * 3600 * 1000);
console.log(`\nüõ´ Voyage Futur:`);
console.log(`   ${futureStartDate.toLocaleString('fr-FR')} ‚Üí ${futureEndDate.toLocaleString('fr-FR')}`);
console.log(`   Dur√©e: ${Math.round((futureEndDate - futureStartDate) / (24 * 3600 * 1000))} jours`);

console.log(`\n‚úÖ Test termin√© !`);
console.log(`\nüìù R√©sum√© des am√©liorations:`);
console.log(`   ‚Ä¢ Pass√©: ${Math.round((now - pastEndDate) / (24 * 3600 * 1000))} jours (au lieu de 1 jour)`);
console.log(`   ‚Ä¢ Futur: ${Math.round((futureStartDate - now) / (24 * 3600 * 1000))} jours (au lieu de 7 jours)`);
console.log(`   ‚Ä¢ Chaque plan garde maintenant ses horaires relatifs`);
console.log(`   ‚Ä¢ Les vols conservent leurs heures de d√©part/arriv√©e`); 