Parfait‚ÄØ! Voici le **contenu complet** du jeu **Pac-Man** r√©alis√© en Angular/Ionic. Ce sera une version simplifi√©e, jouable avec le clavier, avec un labyrinthe fixe, Pac-Man, des fant√¥mes basiques et des pastilles.

---

## ‚úÖ 1. `src/app/home/home.page.ts` ‚Äì Logique du jeu

```ts
import { Component, HostListener, OnInit } from '@angular/core';

@Component({
  selector: 'app-home',
  templateUrl: './home.page.html',
  styleUrls: ['./home.page.scss'],
})
export class HomePage implements OnInit {
  grid: string[][] = [];
  pacman = { x: 1, y: 1 };
  ghost = { x: 5, y: 5 };
  score = 0;

  ngOnInit() {
    this.initGrid();
  }

  initGrid() {
    const layout = [
      'WWWWWWWWWW',
      'W........W',
      'W.WWWWWW.W',
      'W.W....W.W',
      'W.W.WW.W.W',
      'W...W....W',
      'WWWWWWWWWW',
    ];

    this.grid = layout.map(row => row.split(''));
    this.placeCharacters();
  }

  placeCharacters() {
    this.grid[this.pacman.y][this.pacman.x] = 'P';
    this.grid[this.ghost.y][this.ghost.x] = 'G';
  }

  move(dx: number, dy: number) {
    const newX = this.pacman.x + dx;
    const newY = this.pacman.y + dy;

    if (this.grid[newY][newX] === 'W') return;

    if (this.grid[newY][newX] === '.') {
      this.score += 10;
    }

    this.grid[this.pacman.y][this.pacman.x] = ' ';
    this.pacman.x = newX;
    this.pacman.y = newY;
    this.checkCollision();
    this.moveGhost();
    this.grid[this.pacman.y][this.pacman.x] = 'P';
  }

  moveGhost() {
    const dx = this.pacman.x > this.ghost.x ? 1 : this.pacman.x < this.ghost.x ? -1 : 0;
    const dy = this.pacman.y > this.ghost.y ? 1 : this.pacman.y < this.ghost.y ? -1 : 0;

    const nextX = this.ghost.x + dx;
    const nextY = this.ghost.y + dy;

    if (this.grid[nextY][nextX] !== 'W') {
      this.grid[this.ghost.y][this.ghost.x] = ' ';
      this.ghost.x = nextX;
      this.ghost.y = nextY;
    }

    this.grid[this.ghost.y][this.ghost.x] = 'G';
    this.checkCollision();
  }

  checkCollision() {
    if (this.pacman.x === this.ghost.x && this.pacman.y === this.ghost.y) {
      alert('Game Over! Score: ' + this.score);
      this.ngOnInit();
    }
  }

  @HostListener('document:keydown', ['$event'])
  handleKey(event: KeyboardEvent) {
    switch (event.key) {
      case 'ArrowUp': this.move(0, -1); break;
      case 'ArrowDown': this.move(0, 1); break;
      case 'ArrowLeft': this.move(-1, 0); break;
      case 'ArrowRight': this.move(1, 0); break;
    }
  }
}
```

---

## ‚úÖ 2. `src/app/home/home.page.html` ‚Äì Interface

```html
<ion-header>
  <ion-toolbar>
    <ion-title>Pac-Man</ion-title>
    <ion-buttons slot="end">
      <ion-button (click)="ngOnInit()">Recommencer</ion-button>
    </ion-buttons>
  </ion-toolbar>
</ion-header>

<ion-content>
  <div class="score">Score: {{ score }}</div>
  <div class="maze">
    <div *ngFor="let row of grid" class="row">
      <div *ngFor="let cell of row" [ngClass]="{
        wall: cell === 'W',
        dot: cell === '.',
        pacman: cell === 'P',
        ghost: cell === 'G'
      }">
        <span *ngIf="cell === '.'">‚Ä¢</span>
      </div>
    </div>
  </div>
</ion-content>
```

---

## ‚úÖ 3. `src/app/home/home.page.scss` ‚Äì Style du jeu

```scss
.maze {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

.row {
  display: flex;
}

.row div {
  width: 30px;
  height: 30px;
  border: 1px solid #222;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
}

.wall {
  background-color: #333;
}

.dot {
  background-color: black;
  color: white;
}

.pacman {
  background-color: yellow;
  border-radius: 50%;
}

.ghost {
  background-color: red;
  border-radius: 50%;
}

.score {
  text-align: center;
  font-size: 20px;
  margin-top: 15px;
}
```

---

## ‚úÖ 4. `src/app/home/home.module.ts`

```ts
import { IonicModule } from '@ionic/angular';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HomePage } from './home.page';
import { RouterModule } from '@angular/router';

@NgModule({
  imports: [
    IonicModule,
    CommonModule,
    FormsModule,
    RouterModule.forChild([{ path: '', component: HomePage }])
  ],
  declarations: [HomePage]
})
export class HomePageModule {}
```

---

## ‚úÖ 5. `src/app/app-routing.module.ts`

```ts
import { NgModule } from '@angular/core';
import { PreloadAllModules, RouterModule, Routes } from '@angular/router';

const routes: Routes = [
  {
    path: '',
    loadChildren: () =>
      import('./home/home.module').then(m => m.HomePageModule),
  },
];

@NgModule({
  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],
  exports: [RouterModule],
})
export class AppRoutingModule {}
```

---

### üïπÔ∏è Ce que ce jeu Pac-Man propose :

* Mouvement au clavier (fl√®ches).
* Pac-Man ramasse les pastilles.
* Un fant√¥me vous poursuit.
* Rejouer facilement avec le bouton "Recommencer".
* Affichage du score.

